/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/native'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    VICTOR_upper_body_Mat_0_1: THREE.Mesh
    VICTOR_upper_body_Mat_0_2: THREE.Mesh
    VICTOR_upper_body_Mat_0_3: THREE.Mesh
  }
  materials: {
    upper_body_Mat: THREE.MeshPhysicalMaterial
    head_Mat: THREE.MeshPhysicalMaterial
    lower_body_Mat: THREE.MeshPhysicalMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(require('../../../assets/models/victor.glb')) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[1.571, 0, 0]}>
        <group rotation={[-Math.PI, 0, 0]} scale={0.01}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.VICTOR_upper_body_Mat_0_1.geometry}
            material={materials.upper_body_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.VICTOR_upper_body_Mat_0_2.geometry}
            material={materials.head_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.VICTOR_upper_body_Mat_0_3.geometry}
            material={materials.lower_body_Mat}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/untitled.glb')
